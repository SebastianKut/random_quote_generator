{"version":3,"sources":["components/Quote.js","App.js","index.js"],"names":["Quote","className","id","this","props","text","author","href","onClick","generateIndex","Component","App","setState","index","Math","floor","random","state","quotes","length","axios","get","then","response","data","quote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAwBeA,E,uKAlBP,OACA,yBAAKC,UAAU,aACX,yBAAKA,UAAU,mBACX,uBAAGC,GAAG,OAAOD,UAAU,SAAQ,uBAAGA,UAAU,sBAA5C,IAAsEE,KAAKC,MAAMC,MACjF,uBAAGH,GAAG,SAASD,UAAU,UAAzB,KAAqCE,KAAKC,MAAME,SAEpD,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,SAAQ,uBAAGM,KAAK,2BAA2BL,GAAG,eAAc,uBAAGD,UAAU,4BACxF,4BAAQC,GAAG,YAAYD,UAAU,MAAMO,QAASL,KAAKC,MAAMK,eAA3D,mB,GAXIC,a,iBCyCLC,G,wDAtCb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IAkBRK,cAAgB,WACd,EAAKG,SAAS,CACZC,MAAOC,KAAKC,MAAMD,KAAKE,SAAS,EAAKC,MAAMC,OAAOC,WAlBpD,EAAKF,MAAQ,CACbC,OAAO,GACPL,MAAO,GALU,E,gEAUE,IAAD,OAClBO,IAAMC,IAAI,0IACTC,MAAK,SAAAC,GAAQ,OAAI,EAAKX,SAAS,CAC9BM,OAAQK,EAASC,KAAKN,c,+BAaxB,OAEE,yBAAKhB,GAAG,YAAYD,UAAU,WAAWE,KAAKc,MAAMC,OAAOC,OAAO,GACjE,kBAAC,EAAD,CACAd,KAAMF,KAAKc,MAAMC,OAAOf,KAAKc,MAAMJ,OAAOY,MAC1CnB,OAAQH,KAAKc,MAAMC,OAAOf,KAAKc,MAAMJ,OAAOP,OAC5CG,cAAeN,KAAKM,qB,GAjCTC,cCDlBgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.06dd0dfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Quote extends Component {\n  \n      render() {\n        return(\n        <div className=\"container\">\n            <div className=\"quote-container\">\n                <p id=\"text\" className=\"quote\"><i className=\"fas fa-quote-left\"></i> {this.props.text}</p>\n                <p id=\"author\" className=\"author\">- {this.props.author}</p>\n            </div>\n            <div className=\"buttons-container\">\n                <div className=\"tweet\"><a href=\"twitter.com/intent/tweet\" id=\"tweet-quote\"><i className=\"fab fa-twitter-square\"></i></a></div>\n                <button id=\"new-quote\" className=\"btn\" onClick={this.props.generateIndex}>New Quote</button>\n            </div>  \n        </div>\n        );\n      }\n      \n}\n\n\n\nexport default Quote;\n\nQuote.propTypes = {\n    text: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    generateIndex: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport Quote from './components/Quote';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n    quotes:[],\n    index: 0 \n    }\n  }\n  \n  //fetch \"quotes.json\" from server and update state using axios http client\n  componentDidMount() {\n    axios.get('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n    .then(response => this.setState({\n      quotes: response.data.quotes\n    }) \n    )\n  }\n  \n  //generate random index number and update state\n  generateIndex = () => {\n    this.setState({\n      index: Math.floor(Math.random()*this.state.quotes.length)\n    })\n  };\n\n  render(){\n    return(\n      //render Quote component if quotes array from state is not empty\n      <div id=\"quote-box\" className=\"wrapper\">{this.state.quotes.length>0 &&\n       <Quote \n       text={this.state.quotes[this.state.index].quote} \n       author={this.state.quotes[this.state.index].author} \n       generateIndex={this.generateIndex} />\n      }</div>  \n    );\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}